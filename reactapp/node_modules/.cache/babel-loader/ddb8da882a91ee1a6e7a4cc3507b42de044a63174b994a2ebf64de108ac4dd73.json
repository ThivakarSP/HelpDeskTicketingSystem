{"ast":null,"code":"var _jsxFileName = \"D:\\\\Helpdesk_Ticketing\\\\98698b33-5bdf-4501-9f43-41e3e1cbf16a-628b1e05-cb12-43d5-95c0-c4c48d574d3a\\\\reactapp\\\\src\\\\components\\\\KnowledgeBaseManagement.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KnowledgeBaseManagement = () => {\n  _s();\n  const [articles, setArticles] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [showForm, setShowForm] = useState(false);\n  const [editingArticle, setEditingArticle] = useState(null);\n  const [formData, setFormData] = useState({\n    title: '',\n    content: '',\n    categoryId: ''\n  });\n  useEffect(() => {\n    fetchArticles();\n    fetchCategories();\n  }, []);\n  const fetchArticles = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/api/knowledge-base');\n      if (!response.ok) {\n        throw new Error(`Backend not available (status ${response.status})`);\n      }\n      const data = await response.json();\n      setArticles(data);\n      // Store articles in localStorage for consistency\n      localStorage.setItem('knowledgeBaseArticles', JSON.stringify(data));\n    } catch (err) {\n      console.error('Fetch articles error:', err);\n      // Fallback to localStorage for demo mode\n      const storedArticles = localStorage.getItem('knowledgeBaseArticles');\n      if (storedArticles) {\n        setArticles(JSON.parse(storedArticles));\n      } else {\n        // Set default demo articles\n        const demoArticles = [{\n          id: 1,\n          title: 'How to reset your password',\n          content: 'To reset your password, go to the login page and click \"Forgot Password\". Enter your email address and follow the instructions sent to your email.',\n          category: {\n            id: 1,\n            name: 'Account Management'\n          },\n          categoryId: 1\n        }, {\n          id: 2,\n          title: 'How to create a support ticket',\n          content: 'To create a support ticket, navigate to the \"Create Ticket\" page, fill in the required information including title, description, and priority level.',\n          category: {\n            id: 2,\n            name: 'General Help'\n          },\n          categoryId: 2\n        }];\n        setArticles(demoArticles);\n        localStorage.setItem('knowledgeBaseArticles', JSON.stringify(demoArticles));\n      }\n      setError('Backend not available - using demo mode');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const fetchCategories = async () => {\n    try {\n      const response = await fetch('http://localhost:8080/api/lookups/categories');\n      if (response.ok) {\n        const data = await response.json();\n        setCategories(data);\n        // Store categories in localStorage for consistency\n        localStorage.setItem('categories', JSON.stringify(data));\n      } else {\n        throw new Error('Categories API not available');\n      }\n    } catch (err) {\n      console.error('Failed to fetch categories:', err);\n      // Fallback to localStorage for demo mode\n      const storedCategories = localStorage.getItem('categories');\n      if (storedCategories) {\n        setCategories(JSON.parse(storedCategories));\n      } else {\n        // Set default demo categories\n        const demoCategories = [{\n          id: 1,\n          name: 'Account Management'\n        }, {\n          id: 2,\n          name: 'General Help'\n        }, {\n          id: 3,\n          name: 'Technical Issues'\n        }, {\n          id: 4,\n          name: 'Billing'\n        }];\n        setCategories(demoCategories);\n        localStorage.setItem('categories', JSON.stringify(demoCategories));\n      }\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const url = editingArticle ? `http://localhost:8080/api/knowledge-base/${editingArticle.id}` : 'http://localhost:8080/api/knowledge-base';\n      const method = editingArticle ? 'PUT' : 'POST';\n      const payload = {\n        title: formData.title,\n        content: formData.content,\n        categoryId: formData.categoryId || null\n      };\n      const response = await fetch(url, {\n        method,\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      if (!response.ok) {\n        throw new Error('Backend not available');\n      }\n      await fetchArticles();\n    } catch (err) {\n      console.error('API error, using localStorage:', err);\n      // Fallback to localStorage\n      const selectedCategory = categories.find(cat => cat.id === parseInt(formData.categoryId));\n      if (editingArticle) {\n        // Update existing article\n        const updatedArticles = articles.map(article => article.id === editingArticle.id ? {\n          ...article,\n          title: formData.title,\n          content: formData.content,\n          categoryId: formData.categoryId ? parseInt(formData.categoryId) : null,\n          category: selectedCategory || null\n        } : article);\n        setArticles(updatedArticles);\n        localStorage.setItem('knowledgeBaseArticles', JSON.stringify(updatedArticles));\n      } else {\n        // Create new article\n        const newArticle = {\n          id: Date.now(),\n          title: formData.title,\n          content: formData.content,\n          categoryId: formData.categoryId ? parseInt(formData.categoryId) : null,\n          category: selectedCategory || null\n        };\n        const updatedArticles = [...articles, newArticle];\n        setArticles(updatedArticles);\n        localStorage.setItem('knowledgeBaseArticles', JSON.stringify(updatedArticles));\n      }\n    }\n    setShowForm(false);\n    setEditingArticle(null);\n    setFormData({\n      title: '',\n      content: '',\n      categoryId: ''\n    });\n  };\n  const handleEdit = article => {\n    setEditingArticle(article);\n    setFormData({\n      title: article.title,\n      content: article.content,\n      categoryId: article.categoryId ? article.categoryId.toString() : article.category ? article.category.id.toString() : ''\n    });\n    setShowForm(true);\n  };\n  const handleDelete = async id => {\n    if (window.confirm('Are you sure you want to delete this article?')) {\n      try {\n        const response = await fetch(`http://localhost:8080/api/knowledge-base/${id}`, {\n          method: 'DELETE'\n        });\n        if (!response.ok) {\n          throw new Error('Backend not available');\n        }\n        await fetchArticles();\n      } catch (err) {\n        console.error('API error, using localStorage:', err);\n        // Fallback to localStorage\n        const updatedArticles = articles.filter(article => article.id !== id);\n        setArticles(updatedArticles);\n        localStorage.setItem('knowledgeBaseArticles', JSON.stringify(updatedArticles));\n      }\n    }\n  };\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const resetForm = () => {\n    setShowForm(false);\n    setEditingArticle(null);\n    setFormData({\n      title: '',\n      content: '',\n      categoryId: ''\n    });\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: \"Loading knowledge base...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        marginBottom: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Knowledge Base Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-primary\",\n        onClick: () => setShowForm(true),\n        disabled: showForm,\n        children: \"Add Article\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red',\n        marginBottom: '1rem'\n      },\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 9\n    }, this), showForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      style: {\n        marginBottom: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: editingArticle ? 'Edit Article' : 'Add New Article'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '1rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"title\",\n            children: \"Title *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"title\",\n            name: \"title\",\n            value: formData.title,\n            onChange: handleChange,\n            required: true,\n            style: {\n              width: '100%',\n              padding: '0.5rem',\n              marginTop: '0.25rem'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '1rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"categoryId\",\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"categoryId\",\n            name: \"categoryId\",\n            value: formData.categoryId,\n            onChange: handleChange,\n            style: {\n              width: '100%',\n              padding: '0.5rem',\n              marginTop: '0.25rem'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select a category (optional)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 17\n            }, this), categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: category.id,\n              children: category.name\n            }, category.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '1rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"content\",\n            children: \"Content *\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"content\",\n            name: \"content\",\n            value: formData.content,\n            onChange: handleChange,\n            required: true,\n            rows: 8,\n            style: {\n              width: '100%',\n              padding: '0.5rem',\n              marginTop: '0.25rem'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            gap: '0.5rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn-primary\",\n            children: editingArticle ? 'Update' : 'Create'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn-secondary\",\n            onClick: resetForm,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: articles.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No articles found. Create the first article to get started.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 11\n      }, this) : articles.map(article => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'flex-start'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flex: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              style: {\n                margin: '0 0 0.5rem 0'\n              },\n              children: article.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 19\n            }, this), article.category && /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                backgroundColor: '#e9ecef',\n                padding: '0.25rem 0.5rem',\n                borderRadius: '0.25rem',\n                fontSize: '0.875rem',\n                marginBottom: '0.5rem',\n                display: 'inline-block'\n              },\n              children: article.category.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                margin: '0.5rem 0 0 0',\n                color: '#666',\n                display: '-webkit-box',\n                WebkitLineClamp: 3,\n                WebkitBoxOrient: 'vertical',\n                overflow: 'hidden'\n              },\n              children: article.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              gap: '0.5rem',\n              marginLeft: '1rem'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-secondary\",\n              onClick: () => handleEdit(article),\n              disabled: showForm,\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-danger\",\n              onClick: () => handleDelete(article.id),\n              style: {\n                backgroundColor: '#dc3545',\n                color: 'white'\n              },\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 15\n        }, this)\n      }, article.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 208,\n    columnNumber: 5\n  }, this);\n};\n_s(KnowledgeBaseManagement, \"5LjvTcF8WYztRqxu+C3qBCFFFg8=\");\n_c = KnowledgeBaseManagement;\nexport default KnowledgeBaseManagement;\nvar _c;\n$RefreshReg$(_c, \"KnowledgeBaseManagement\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","KnowledgeBaseManagement","_s","articles","setArticles","categories","setCategories","loading","setLoading","error","setError","showForm","setShowForm","editingArticle","setEditingArticle","formData","setFormData","title","content","categoryId","fetchArticles","fetchCategories","response","fetch","ok","Error","status","data","json","localStorage","setItem","JSON","stringify","err","console","storedArticles","getItem","parse","demoArticles","id","category","name","storedCategories","demoCategories","handleSubmit","e","preventDefault","url","method","payload","headers","body","selectedCategory","find","cat","parseInt","updatedArticles","map","article","newArticle","Date","now","handleEdit","toString","handleDelete","window","confirm","filter","handleChange","target","value","resetForm","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","justifyContent","alignItems","marginBottom","onClick","disabled","color","onSubmit","htmlFor","type","onChange","required","width","padding","marginTop","rows","gap","length","flex","margin","backgroundColor","borderRadius","fontSize","WebkitLineClamp","WebkitBoxOrient","overflow","marginLeft","_c","$RefreshReg$"],"sources":["D:/Helpdesk_Ticketing/98698b33-5bdf-4501-9f43-41e3e1cbf16a-628b1e05-cb12-43d5-95c0-c4c48d574d3a/reactapp/src/components/KnowledgeBaseManagement.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst KnowledgeBaseManagement = () => {\r\n  const [articles, setArticles] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [showForm, setShowForm] = useState(false);\r\n  const [editingArticle, setEditingArticle] = useState(null);\r\n  const [formData, setFormData] = useState({\r\n    title: '',\r\n    content: '',\r\n    categoryId: ''\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchArticles();\r\n    fetchCategories();\r\n  }, []);\r\n\r\n  const fetchArticles = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:8080/api/knowledge-base');\r\n      if (!response.ok) {\r\n        throw new Error(`Backend not available (status ${response.status})`);\r\n      }\r\n      const data = await response.json();\r\n      setArticles(data);\r\n      // Store articles in localStorage for consistency\r\n      localStorage.setItem('knowledgeBaseArticles', JSON.stringify(data));\r\n    } catch (err) {\r\n      console.error('Fetch articles error:', err);\r\n      // Fallback to localStorage for demo mode\r\n      const storedArticles = localStorage.getItem('knowledgeBaseArticles');\r\n      if (storedArticles) {\r\n        setArticles(JSON.parse(storedArticles));\r\n      } else {\r\n        // Set default demo articles\r\n        const demoArticles = [\r\n          {\r\n            id: 1,\r\n            title: 'How to reset your password',\r\n            content: 'To reset your password, go to the login page and click \"Forgot Password\". Enter your email address and follow the instructions sent to your email.',\r\n            category: { id: 1, name: 'Account Management' },\r\n            categoryId: 1\r\n          },\r\n          {\r\n            id: 2,\r\n            title: 'How to create a support ticket',\r\n            content: 'To create a support ticket, navigate to the \"Create Ticket\" page, fill in the required information including title, description, and priority level.',\r\n            category: { id: 2, name: 'General Help' },\r\n            categoryId: 2\r\n          }\r\n        ];\r\n        setArticles(demoArticles);\r\n        localStorage.setItem('knowledgeBaseArticles', JSON.stringify(demoArticles));\r\n      }\r\n      setError('Backend not available - using demo mode');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchCategories = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:8080/api/lookups/categories');\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setCategories(data);\r\n        // Store categories in localStorage for consistency\r\n        localStorage.setItem('categories', JSON.stringify(data));\r\n      } else {\r\n        throw new Error('Categories API not available');\r\n      }\r\n    } catch (err) {\r\n      console.error('Failed to fetch categories:', err);\r\n      // Fallback to localStorage for demo mode\r\n      const storedCategories = localStorage.getItem('categories');\r\n      if (storedCategories) {\r\n        setCategories(JSON.parse(storedCategories));\r\n      } else {\r\n        // Set default demo categories\r\n        const demoCategories = [\r\n          { id: 1, name: 'Account Management' },\r\n          { id: 2, name: 'General Help' },\r\n          { id: 3, name: 'Technical Issues' },\r\n          { id: 4, name: 'Billing' }\r\n        ];\r\n        setCategories(demoCategories);\r\n        localStorage.setItem('categories', JSON.stringify(demoCategories));\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const url = editingArticle ? `http://localhost:8080/api/knowledge-base/${editingArticle.id}` : 'http://localhost:8080/api/knowledge-base';\r\n      const method = editingArticle ? 'PUT' : 'POST';\r\n      \r\n      const payload = {\r\n        title: formData.title,\r\n        content: formData.content,\r\n        categoryId: formData.categoryId || null\r\n      };\r\n      \r\n      const response = await fetch(url, {\r\n        method,\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(payload),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Backend not available');\r\n      }\r\n\r\n      await fetchArticles();\r\n    } catch (err) {\r\n      console.error('API error, using localStorage:', err);\r\n      // Fallback to localStorage\r\n      const selectedCategory = categories.find(cat => cat.id === parseInt(formData.categoryId));\r\n      \r\n      if (editingArticle) {\r\n        // Update existing article\r\n        const updatedArticles = articles.map(article => \r\n          article.id === editingArticle.id \r\n            ? {\r\n                ...article,\r\n                title: formData.title,\r\n                content: formData.content,\r\n                categoryId: formData.categoryId ? parseInt(formData.categoryId) : null,\r\n                category: selectedCategory || null\r\n              }\r\n            : article\r\n        );\r\n        setArticles(updatedArticles);\r\n        localStorage.setItem('knowledgeBaseArticles', JSON.stringify(updatedArticles));\r\n      } else {\r\n        // Create new article\r\n        const newArticle = {\r\n          id: Date.now(),\r\n          title: formData.title,\r\n          content: formData.content,\r\n          categoryId: formData.categoryId ? parseInt(formData.categoryId) : null,\r\n          category: selectedCategory || null\r\n        };\r\n        const updatedArticles = [...articles, newArticle];\r\n        setArticles(updatedArticles);\r\n        localStorage.setItem('knowledgeBaseArticles', JSON.stringify(updatedArticles));\r\n      }\r\n    }\r\n\r\n    setShowForm(false);\r\n    setEditingArticle(null);\r\n    setFormData({ title: '', content: '', categoryId: '' });\r\n  };\r\n\r\n  const handleEdit = (article) => {\r\n    setEditingArticle(article);\r\n    setFormData({\r\n      title: article.title,\r\n      content: article.content,\r\n      categoryId: article.categoryId ? article.categoryId.toString() : (article.category ? article.category.id.toString() : '')\r\n    });\r\n    setShowForm(true);\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    if (window.confirm('Are you sure you want to delete this article?')) {\r\n      try {\r\n        const response = await fetch(`http://localhost:8080/api/knowledge-base/${id}`, {\r\n          method: 'DELETE',\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error('Backend not available');\r\n        }\r\n\r\n        await fetchArticles();\r\n      } catch (err) {\r\n        console.error('API error, using localStorage:', err);\r\n        // Fallback to localStorage\r\n        const updatedArticles = articles.filter(article => article.id !== id);\r\n        setArticles(updatedArticles);\r\n        localStorage.setItem('knowledgeBaseArticles', JSON.stringify(updatedArticles));\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setShowForm(false);\r\n    setEditingArticle(null);\r\n    setFormData({ title: '', content: '', categoryId: '' });\r\n  };\r\n\r\n  if (loading) return <div className=\"container\">Loading knowledge base...</div>;\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '1rem' }}>\r\n        <h1>Knowledge Base Management</h1>\r\n        <button \r\n          className=\"btn-primary\" \r\n          onClick={() => setShowForm(true)}\r\n          disabled={showForm}\r\n        >\r\n          Add Article\r\n        </button>\r\n      </div>\r\n\r\n      {error && (\r\n        <div style={{ color: 'red', marginBottom: '1rem' }}>\r\n          Error: {error}\r\n        </div>\r\n      )}\r\n\r\n      {showForm && (\r\n        <div className=\"card\" style={{ marginBottom: '1rem' }}>\r\n          <h3>{editingArticle ? 'Edit Article' : 'Add New Article'}</h3>\r\n          <form onSubmit={handleSubmit}>\r\n            <div style={{ marginBottom: '1rem' }}>\r\n              <label htmlFor=\"title\">Title *</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"title\"\r\n                name=\"title\"\r\n                value={formData.title}\r\n                onChange={handleChange}\r\n                required\r\n                style={{ width: '100%', padding: '0.5rem', marginTop: '0.25rem' }}\r\n              />\r\n            </div>\r\n            <div style={{ marginBottom: '1rem' }}>\r\n              <label htmlFor=\"categoryId\">Category</label>\r\n              <select\r\n                id=\"categoryId\"\r\n                name=\"categoryId\"\r\n                value={formData.categoryId}\r\n                onChange={handleChange}\r\n                style={{ width: '100%', padding: '0.5rem', marginTop: '0.25rem' }}\r\n              >\r\n                <option value=\"\">Select a category (optional)</option>\r\n                {categories.map(category => (\r\n                  <option key={category.id} value={category.id}>\r\n                    {category.name}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div style={{ marginBottom: '1rem' }}>\r\n              <label htmlFor=\"content\">Content *</label>\r\n              <textarea\r\n                id=\"content\"\r\n                name=\"content\"\r\n                value={formData.content}\r\n                onChange={handleChange}\r\n                required\r\n                rows={8}\r\n                style={{ width: '100%', padding: '0.5rem', marginTop: '0.25rem' }}\r\n              />\r\n            </div>\r\n            <div style={{ display: 'flex', gap: '0.5rem' }}>\r\n              <button type=\"submit\" className=\"btn-primary\">\r\n                {editingArticle ? 'Update' : 'Create'}\r\n              </button>\r\n              <button type=\"button\" className=\"btn-secondary\" onClick={resetForm}>\r\n                Cancel\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      )}\r\n\r\n      <div>\r\n        {articles.length === 0 ? (\r\n          <div className=\"card\">\r\n            <p>No articles found. Create the first article to get started.</p>\r\n          </div>\r\n        ) : (\r\n          articles.map(article => (\r\n            <div key={article.id} className=\"card\">\r\n              <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start' }}>\r\n                <div style={{ flex: 1 }}>\r\n                  <h3 style={{ margin: '0 0 0.5rem 0' }}>{article.title}</h3>\r\n                  {article.category && (\r\n                    <span style={{ \r\n                      backgroundColor: '#e9ecef', \r\n                      padding: '0.25rem 0.5rem', \r\n                      borderRadius: '0.25rem', \r\n                      fontSize: '0.875rem',\r\n                      marginBottom: '0.5rem',\r\n                      display: 'inline-block'\r\n                    }}>\r\n                      {article.category.name}\r\n                    </span>\r\n                  )}\r\n                  <p style={{ \r\n                    margin: '0.5rem 0 0 0', \r\n                    color: '#666',\r\n                    display: '-webkit-box',\r\n                    WebkitLineClamp: 3,\r\n                    WebkitBoxOrient: 'vertical',\r\n                    overflow: 'hidden'\r\n                  }}>\r\n                    {article.content}\r\n                  </p>\r\n                </div>\r\n                <div style={{ display: 'flex', gap: '0.5rem', marginLeft: '1rem' }}>\r\n                  <button \r\n                    className=\"btn-secondary\" \r\n                    onClick={() => handleEdit(article)}\r\n                    disabled={showForm}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button \r\n                    className=\"btn-danger\" \r\n                    onClick={() => handleDelete(article.id)}\r\n                    style={{ backgroundColor: '#dc3545', color: 'white' }}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default KnowledgeBaseManagement;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}